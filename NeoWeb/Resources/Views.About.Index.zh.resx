<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A built-in oracle component enabling smart contracts to access external resources" xml:space="preserve">
    <value>内置的预言机系统，使智能合约能够访问外部资源</value>
  </data>
  <data name="A consensus algorithm with high stability, high TPS and single block finality" xml:space="preserve">
    <value>具有高稳定性、高 TPS 和单区块终局性的共识算法</value>
  </data>
  <data name="A distributed object storage solution for on-chain data applications" xml:space="preserve">
    <value>分布式数据存储系统，用于在链上存储大规模数据</value>
  </data>
  <data name="An innovative dual token economic model that optimizes on-chain governance and utility" xml:space="preserve">
    <value>用于分离 Neo 网络治理权和使用权的双通证机制，增强通证的管理与流动性</value>
  </data>
  <data name="A lightweight, cross-platform and scalable virtual machine" xml:space="preserve">
    <value>轻量级、可跨平台、具备高扩展性的虚拟机</value>
  </data>
  <data name="A cross platform, multi-language supported smart contract system" xml:space="preserve">
    <value>支持多种常见编程语言、可跨平台、可并行执行的智能合约系统</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>关于我们</value>
  </data>
  <data name="An Open Network for the Smart Economy" xml:space="preserve">
    <value>Neo, 为智能经济打造的开放网络</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>立即申请</value>
  </data>
  <data name="Individuals and entities can become consensus node candidates via application. Through election by NEO holders, candidates can then become consensus nodes on Neo MainNet." xml:space="preserve">
    <value>链下治理：候选人将与 Neo 基金会建立战略伙伴关系，并接受来自基金会的投票。链上治理：候选人通过获得 NEO 持有者的投票，被选举成为共识节点</value>
  </data>
  <data name="Explore" xml:space="preserve">
    <value>了解更多</value>
  </data>
  <data name="How To Become A Consensus Node" xml:space="preserve">
    <value>如何成为共识节点</value>
  </data>
  <data name="https://neo-ngd.github.io/reference/How-To-Become-NEO-Consensus-Node.html" xml:space="preserve">
    <value>https://neo-ngd.github.io/reference/%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BANEO%E5%85%B1%E8%AF%86%E8%8A%82%E7%82%B9.html</value>
  </data>
  <data name="Learn more" xml:space="preserve">
    <value>了解更多</value>
  </data>
  <data name="More details:" xml:space="preserve">
    <value>更多详细信息：</value>
  </data>
  <data name="Neo Contributors" xml:space="preserve">
    <value>Neo 贡献者</value>
  </data>
  <data name="Become a consensus node and shape your future" xml:space="preserve">
    <value>成为共识节点，共同实现智能经济</value>
  </data>
  <data name="Neo in Retrospect" xml:space="preserve">
    <value>Neo 大事记</value>
  </data>
  <data name="Neo is an open-source, community driven platform that is leveraging the intrinsic advantages of blockchain technology to realize the optimized digital world of the future." xml:space="preserve">
    <value>作为一个由社区驱动的开源项目，Neo 正利用区块链技术的固有优势，探索并实现面向未来数字世界的最优化解决方案。</value>
  </data>
  <data name="A voting mechanism that enables participation of on-chain governance" xml:space="preserve">
    <value>允许每个人都参与网络治理的链上投票机制</value>
  </data>
  <data name="A customizable decentralized self-sovereign identity protocol" xml:space="preserve">
    <value>让用户重新拥有数据主权，通过新提出的信用评分机制将“信任与否”的难题转换为“信任多少”的判断，用户还可以灵活定制适合自己的信任评估模型。</value>
  </data>
  <data name="Technology" xml:space="preserve">
    <value>技术优势</value>
  </data>
  <data name="View more" xml:space="preserve">
    <value>浏览更多</value>
  </data>
</root>